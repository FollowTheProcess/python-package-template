[build-system]
requires = [ "hatchling" ]
build-backend = "hatchling.build"

[project]
name = "{{slug}}"
version = "0.1.0"
description = "{{description}}"
authors = [
  { name = "{{author_name}}", email = "{{author_email}}" },
]
readme = "README.md"
requires-python = ">=3.10,<4"
classifiers = [
  "Development Status :: 3 - Alpha",
  "Natural Language :: English",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Typing :: Typed",
]
dependencies = [ ]

[dependency-groups]
dev = [
  "pytest>=8.2.2",
  "pytest-clarity>=1.0.1",
  "pytest-cov>=5.0.0",
  "mypy>=1.11.2",
  "ruff>=0.6.2",
  "mkdocs>=1.6.0",
  "mkdocs-material>=9.5.33",
  "mkdocs-include-markdown-plugin>=6.2.2",
]

[project.urls]
Repository = "{{github_url}}"
Documentation = "https://{{github_username}}.github.io/{{slug}}/"

[tool.uv]
package = true

[tool.pytest.ini_options]
filterwarnings = [
  "error",
]
minversion = "7.0"
addopts = [ "-ra", "--strict-markers", "--strict-config" ]
xfail_strict = true
log_cli_level = "info"
testpaths = [ "tests" ]

[tool.coverage.run]
branch = true

[tool.coverage.report]
show_missing = true
skip_covered = true
fail_under = 100

[tool.mypy]
files = [ "**/*.py" ]
python_version = "3.9"
ignore_missing_imports = true
strict = true
pretty = true
disallow_untyped_decorators = false
show_error_codes = true
warn_unreachable = true
enable_error_code = [ "ignore-without-code", "redundant-expr", "truthy-bool" ]

[tool.ruff]
line-length = 120

[tool.ruff.format]
# https://docs.astral.sh/ruff/settings/#format
docstring-code-format = true
quote-style = "double"

[tool.ruff.lint]
# https://docs.astral.sh/ruff/rules/
select = [
  "ALL", # Lint all the things!
]
ignore = [
  # Lots of 'D' rules conflict with one another, this seems to be the most stable config
  "D203", # One blank line before class docstring
  "D212", # Multi-line docstring summary should be on the first line
  "D200", # One line docstring should all be on one line
  "D401", # First line should be in imperative mood
  "D205", # One blank line required between summary line and description
  "D417", # Wants sphinx style docstrings
  "D406", # Section names should end with a newline
  "D407", # Missing dashed underline after section

  # Not necessary to type annotate self and cls as it should be obvious
  "ANN101", # Missing type annotation for self in method
  "ANN102", # Missing type annotation for cls in classmethod

  # https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
  "W191",   # Tab indentation
  "E111",   # Indentation with invalid multiple
  "E114",   # Indentation with invalid multiple comment
  "E117",   # Over indented
  "E501",   # Line too long
  "D206",   # Indent with spaces
  "D300",   # Triple single quotes
  "Q000",   # Bad quotes inline string
  "Q001",   # Bad quotes multiline string
  "Q002",   # Bad quotes docstring
  "Q003",   # Avoidable escaped quote
  "COM812", # Missing traiiling comma
  "COM819", # Prohibited trailing comma
  "ISC001", # Single line implicit string concatenation
  "ISC002", # Multi line implicit string concatenation
]
unfixable = [
  "F841", # Prevents ruff deleting "unused" variables you're still working on
]

[tool.ruff.lint.mccabe]
max-complexity = 15

[tool.ruff.lint.isort]
required-imports = [ "from __future__ import annotations" ]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
  "ARG001", # Thinks pytest fixtures are unused arguments
  "D104",   # Missing docstring in __init__.py in tests (which is fine)
  "FBT001", # Tests are allowed positional bools (fixtures etc.)
  "S",      # Security stuff is noise in tests
  "TCH",    # Tests will be run with dev dependencies so we don't care about separating type hints
]
"conftest.py" = [
  "TCH", # Conftest is only run for tests (with dev dependencies)
]
