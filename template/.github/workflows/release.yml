name: Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false # Only 1 release job can run at a time

permissions: {}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    environment: release
    permissions:
      contents: write
      pull-requests: read
      id-token: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch Existing Tags
        run: git fetch --force --tags

      - name: Set Up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: pyproject.toml

      - name: Install uv
        shell: bash
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Get uv Cache Dir
        id: cache
        run: |
          echo "dir=$(uv cache dir)"
          echo "dir=$(uv cache dir)" >> $GITHUB_OUTPUT

      - name: Cache uv
        uses: actions/cache@v4
        with:
          path: ${{ steps.cache.outputs.dir }}
          key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
            uv-${{ runner.os }}

      - name: Install Dependencies
        run: uv sync --all-extras --dev

      - name: Parse Release Version
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Publish Release Notes
        uses: release-drafter/release-drafter@v6
        with:
            version: ${{ steps.version.outputs.version }}
            publish: true
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Deploy Docs to GitHub Pages
        run: |
          uv run mkdocs build --clean
          uv run mkdocs gh-deploy --force
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Build Python Package
        run: uv tool run --from build pyproject-build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

      - name: Minimize uv cache
        run: uv cache prune --ci
